INFO : Reading german.csv from ./data/
INFO : Numeric: ['duration', 'credit_amount', 'installment_commitment', 'residence_since', 'age', 'existing_credits', 'num_dependents'] 
 Categorical: ['checking_status', 'credit_history', 'purpose', 'savings_status', 'employment', 'personal_status', 'other_parties', 'property_magnitude', 'other_payment_plans', 'housing', 'job', 'own_telephone', 'foreign_worker'], Continuous: ['duration', 'credit_amount', 'age']
INFO : Num_strat: mean, Cat_strat: constant, Cat_fill: ?
INFO : Target_map: {'good': 0, 'bad': 1}
INFO : Test_size: 0.3, Random_state: 42
INFO : Classifier: random_forest Parameters: {'max_depth': 20, 'n_estimators': 50, 'random_state': 42}
INFO : Train accuracy: 0.9985714285714286
INFO : Test accuracy: 0.76
INFO : 
Classification Report (Train):
              precision    recall  f1-score   support

        good       1.00      1.00      1.00       490
         bad       1.00      1.00      1.00       210

    accuracy                           1.00       700
   macro avg       1.00      1.00      1.00       700
weighted avg       1.00      1.00      1.00       700

INFO : 
Classification Report (Test):
              precision    recall  f1-score   support

        good       0.78      0.92      0.84       210
         bad       0.67      0.39      0.49        90

    accuracy                           0.76       300
   macro avg       0.73      0.65      0.67       300
weighted avg       0.75      0.76      0.74       300

INFO : Initializing Anchor Explainer with params: precision_treshold = 0.9, beam_size = 2, feature_names = Index(['checking_status', 'duration', 'credit_history', 'purpose',
       'credit_amount', 'savings_status', 'employment',
       'installment_commitment', 'personal_status', 'other_parties',
       'residence_since', 'property_magnitude', 'age', 'other_payment_plans',
       'housing', 'existing_credits', 'job', 'num_dependents', 'own_telephone',
       'foreign_worker'],
      dtype='object'), categorical_names = {0: ['0<=X<200', '<0', '>=200', 'no checking'], 2: ['all paid', 'critical/other existing credit', 'delayed previously', 'existing paid', 'no credits/all paid'], 3: ['business', 'domestic appliance', 'education', 'furniture/equipment', 'new car', 'other', 'radio/tv', 'repairs', 'retraining', 'used car'], 5: ['100<=X<500', '500<=X<1000', '<100', '>=1000', 'no known savings'], 6: ['1<=X<4', '4<=X<7', '<1', '>=7', 'unemployed'], 8: ['female div/dep/mar', 'male div/sep', 'male mar/wid', 'male single'], 9: ['co applicant', 'guarantor', 'none'], 11: ['car', 'life insurance', 'no known property', 'real estate'], 13: ['bank', 'none', 'stores'], 14: ['for free', 'own', 'rent'], 16: ['high qualif/self emp/mgmt', 'skilled', 'unemp/unskilled non res', 'unskilled resident'], 18: ['none', 'yes'], 19: ['no', 'yes']}, seed = None
INFO : Initializing LORE_xailib Explainer with config: {'neigh_type': 'geneticp', 'size': 1000, 'ocr': 0.1, 'ngen': 10}
INFO : Initializing LUX with params neighborhood_size = 35, max_depth = 10, min_samples = 5, node_size_limit = 1, grow_confidence_threshold = 0
INFO ENTRY: Explaining instance: 116 outcome: bad
INFO RULE: Anchor: IF credit_amount > 1360.75 AND savings_status = no known savings THEN good Pre, Cov : (0.9033742331288344, 0.1369)
INFO RULE: Anchor: IF housing = own AND other_payment_plans = none AND savings_status = no known savings THEN good Pre, Cov : (0.9409090909090909, 0.0985)
INFO RULE: LORE_xailib: IF credit_amount <= 1.31 AND personal_status != male mar/wid AND purpose != new car AND residence_since <= 1.99 AND savings_status != 500< AND savings_status != <100 THEN bad Pre, Cov : (0.15, 0.02)
INFO RULE: LORE_xailib: IF credit_history != no credits/all paid AND duration <= 1.12 AND existing_credits <= 1.61 AND other_parties != none AND other_payment_plans != stores AND personal_status != female div/dep/mar AND personal_status != male mar/wid AND property_magnitude != no known property AND purpose != new car THEN bad Pre, Cov : (0.125, 0.016)
INFO RULE: LORE_sa: IF savings_status = no known savings AND employment != <1 AND employment != 1< THEN good Pre, Cov : (0.81875, 0.16)
INFO RULE: LORE_sa: IF savings_status = no known savings AND property_magnitude != no known property AND employment != <1 THEN good Pre, Cov : (0.8294573643410853, 0.129)
INFO RULE: LUX: IF age >=22.0 AND checking_status <2.5 AND credit_amount >=1551.5 AND property_magnitude <1.5 AND savings_status >=1.5 THEN class = good  # confidence = 1.0
INFO ENTRY: Explaining instance: 115 outcome: good
INFO RULE: Anchor: IF checking_status = no checking THEN good Pre, Cov : (0.9168207024029574, 0.3886)
INFO RULE: Anchor: IF checking_status = no checking AND other_payment_plans = none THEN good Pre, Cov : (0.9352014010507881, 0.3283)
INFO RULE: LORE_xailib: IF credit_amount <= 2.84 AND duration <= 0.51 AND installment_commitment <= 4.78 AND installment_commitment > 0.56 AND purpose != education AND savings_status != 500< THEN bad Pre, Cov : (0.24209078404401652, 0.727)
INFO RULE: LORE_xailib: IF age > -1.46 AND duration <= 0.77 AND purpose != education THEN bad Pre, Cov : (0.2523364485981308, 0.749)
INFO RULE: LORE_sa: IF checking_status = no checking THEN good Pre, Cov : (0.883248730964467, 0.394)
INFO RULE: LORE_sa: IF credit_amount <= 3599.877197265625 THEN good Pre, Cov : (0.7357954545454546, 0.704)
INFO RULE: LUX: IF checking_status >=2.5 AND purpose >=2.5 AND residence_since <1.5 THEN class = bad  # confidence = 1.0
INFO ENTRY: Explaining instance: 996 outcome: good
INFO RULE: Anchor: IF age > 33.00 AND credit_amount <= 3974.50 AND housing = own AND other_payment_plans = none AND purpose = used car THEN good Pre, Cov : (0.9138755980861244, 0.0137)
INFO RULE: Anchor: IF age > 33.00 AND credit_amount <= 3974.50 AND housing = own AND other_payment_plans = none AND own_telephone = yes THEN good Pre, Cov : (0.9045161290322581, 0.0917)
INFO RULE: LORE_xailib: IF checking_status != 0< AND checking_status != no checking AND credit_amount > -0.15 AND duration > 0.49 AND employment != > AND installment_commitment <= 0.43 AND job != high qualif/self emp/mgmt AND num_dependents <= 0.50 AND other_parties != none AND personal_status != female div/dep/mar AND personal_status != male mar/wid AND property_magnitude != real estate AND purpose != furniture/equipment AND purpose != radio/tv AND savings_status != <100 AND savings_status != no known savings THEN bad Pre, Cov : (0, 0.0)
INFO RULE: LORE_xailib: IF age <= 0.07 AND age > -0.26 AND checking_status != no checking AND duration > 0.40 AND housing != own AND installment_commitment <= 0.28 AND job != high qualif/self emp/mgmt AND num_dependents <= 1.11 AND other_parties != none AND other_payment_plans != bank AND other_payment_plans != stores AND personal_status != female div/dep/mar AND purpose != business AND purpose != furniture/equipment AND purpose != radio/tv AND savings_status != <100 AND savings_status != > AND savings_status != no known savings THEN bad Pre, Cov : (0, 0.0)
INFO RULE: LORE_sa: IF existing_credits <= 1.5665516257286072 AND purpose = used car AND property_magnitude = life insurance AND credit_amount <= 3921.9102783203125 AND credit_history != all paid AND employment = 1< AND age <= 42.807106018066406 AND installment_commitment > 3.562334179878235 AND personal_status != female div/dep/mar AND residence_since > 3.526667833328247 THEN good Pre, Cov : (0, 0.0)
INFO RULE: LORE_sa: IF residence_since > 3.463091015815735 AND purpose = used car AND installment_commitment > 3.5189602375030518 AND age > 36.2117862701416 AND credit_amount <= 4615.335693359375 AND other_payment_plans = none AND existing_credits <= 1.5116121768951416 AND personal_status != female div/dep/mar AND property_magnitude = life insurance AND housing = own THEN good Pre, Cov : (1.0, 0.001)
INFO RULE: LUX: IF checking_status <1.5 AND duration >=20.5 AND other_payment_plans >= -0.05255606196954324 * savings_status+1.0220118927981456 AND personal_status <1.5 THEN class = bad  # confidence = 1.0
