Reading adult.csv from ./data/
Dropped columns:['fnlwgt']

Raw NaN counts per column:
workclass         1836
occupation        1843
native.country     583
dtype: int64
Numeric: ['age', 'capital.gain', 'capital.loss', 'hours.per.week'] 
 Categorical: ['workclass', 'education', 'education.num', 'marital.status', 'occupation', 'relationship', 'race', 'sex', 'native.country'], Continuous: ['age', 'capital.gain', 'capital.loss', 'hours.per.week']
Num_strat: mean, Cat_strat: most_frequent

Raw NaN counts per column:
Series([], dtype: int64)
Target_map: {'<=50K': 0, '>50K': 1}
Test_size: 0.3, Random_state: 42
Classifier: random_forest Parameters: {'max_depth': 20, 'n_estimators': 50, 'random_state': 42, 'min_samples_split': 20, 'min_samples_leaf': 2}

Test class distribution:
       Count  Percentage
class                   
0      24720       75.92
1       7841       24.08

Train class distribution:
       Count  Percentage
class                   
<=50K  17303       75.92
>50K    5489       24.08

Test class distribution:
       Count  Percentage
class                   
<=50K   7417       75.92
>50K    2352       24.08
Train accuracy: 0.8742102492102493
Test accuracy: 0.8549493295117208

Classification Report (Train):
              precision    recall  f1-score   support

       <=50K       0.89      0.96      0.92     17303
        >50K       0.82      0.61      0.70      5489

    accuracy                           0.87     22792
   macro avg       0.85      0.78      0.81     22792
weighted avg       0.87      0.87      0.87     22792


Classification Report (Test):
              precision    recall  f1-score   support

       <=50K       0.87      0.95      0.91      7417
        >50K       0.77      0.57      0.65      2352

    accuracy                           0.85      9769
   macro avg       0.82      0.76      0.78      9769
weighted avg       0.85      0.85      0.85      9769

Initializing Anchor Explainer with params: precision_treshold = 0.9, beam_size = 8, feature_names = Index(['age', 'workclass', 'education', 'education.num', 'marital.status',
       'occupation', 'relationship', 'race', 'sex', 'capital.gain',
       'capital.loss', 'hours.per.week', 'native.country'],
      dtype='object'), categorical_names = {1: ['Federal-gov', 'Local-gov', 'Never-worked', 'Private', 'Self-emp-inc', 'Self-emp-not-inc', 'State-gov', 'Without-pay'], 2: ['10th', '11th', '12th', '1st-4th', '5th-6th', '7th-8th', '9th', 'Assoc-acdm', 'Assoc-voc', 'Bachelors', 'Doctorate', 'HS-grad', 'Masters', 'Preschool', 'Prof-school', 'Some-college'], 3: ['1', '10', '11', '12', '13', '14', '15', '16', '2', '3', '4', '5', '6', '7', '8', '9'], 4: ['Divorced', 'Married-AF-spouse', 'Married-civ-spouse', 'Married-spouse-absent', 'Never-married', 'Separated', 'Widowed'], 5: ['Adm-clerical', 'Armed-Forces', 'Craft-repair', 'Exec-managerial', 'Farming-fishing', 'Handlers-cleaners', 'Machine-op-inspct', 'Other-service', 'Priv-house-serv', 'Prof-specialty', 'Protective-serv', 'Sales', 'Tech-support', 'Transport-moving'], 6: ['Husband', 'Not-in-family', 'Other-relative', 'Own-child', 'Unmarried', 'Wife'], 7: ['Amer-Indian-Eskimo', 'Asian-Pac-Islander', 'Black', 'Other', 'White'], 8: ['Female', 'Male'], 12: ['Cambodia', 'Canada', 'China', 'Columbia', 'Cuba', 'Dominican-Republic', 'Ecuador', 'El-Salvador', 'England', 'France', 'Germany', 'Greece', 'Guatemala', 'Haiti', 'Holand-Netherlands', 'Honduras', 'Hong', 'Hungary', 'India', 'Iran', 'Ireland', 'Italy', 'Jamaica', 'Japan', 'Laos', 'Mexico', 'Nicaragua', 'Outlying-US(Guam-USVI-etc)', 'Peru', 'Philippines', 'Poland', 'Portugal', 'Puerto-Rico', 'Scotland', 'South', 'Taiwan', 'Thailand', 'Trinadad&Tobago', 'United-States', 'Vietnam', 'Yugoslavia']}, seed = None, iter_limit = 30
Initializing LORE Explainer with params: ng_function <function genetic_neighborhood at 0x0000017831887BA0>, discrete_use_probabilities True,continuous_function_estimation False, iter_limit = 30
Initializing EXPLAN Explainer with config: N_samples=3000, tau=250, iter_limit=30 
